-- Percsploit Multi Loader
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui", 10)

-- Configuration
local CONFIG = {
    Theme = {
        Primary = Color3.fromRGB(128, 0, 128), -- Purple
        Secondary = Color3.fromRGB(255, 105, 180), -- Pink
        Background = Color3.fromRGB(0, 0, 0), -- Black
        Accent = Color3.fromRGB(50, 50, 50), -- Button background
        Text = Color3.fromRGB(255, 255, 255), -- White text
        Status = Color3.fromRGB(0, 255, 0) -- Green for status dot
    },
    Scripts = {
        {name = "Arcade Basketball", url = "https://api.luarmor.net/files/v3/loaders/4b9b7b3daa96e24fb09b4451abe2fd50.lua"},
        {name = "Hoop Heroes", url = "https://api.luarmor.net/files/v3/loaders/12d8d6a43ade4627ec3bdfe242435a82.lua"},
        {name = "Flag Football", url = "https://api.luarmor.net/files/v3/loaders/16e1671cf1b0e5b6df8b20fa921a7294.lua"},
        {name = "Practical Basketball", url = "https://api.luarmor.net/files/v3/loaders/01b608f4b8e66b0be97fe3ff518726fd.lua"},
        {name = "Playground Basketball", url = "https://api.luarmor.net/files/v3/loaders/1f7d065fdc92ad0c0b92994a16c1b97f.lua"}
    },
    Sizes = {
        MainFrame = UserInputService.TouchEnabled and UDim2.new(0, 250, 0, 350) or UDim2.new(0, 300, 0, 400),
        IconSize = UDim2.new(0, 50, 0, 50),
        ButtonHeight = 50,
        ButtonSpacing = 10
    }
}

-- Detect if the user is on mobile
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Error Notification Function
local function showNotification(title, text, duration)
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 5
        })
    end)
end

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PercsploitMultiLoader"
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 1000
ScreenGui.Parent = PlayerGui or game:GetService("CoreGui")

-- Create Toggle Icon
local ToggleIcon = Instance.new("ImageButton")
ToggleIcon.Size = CONFIG.Sizes.IconSize
ToggleIcon.Position = UDim2.new(0.95, -60, 0, 10)
ToggleIcon.BackgroundColor3 = CONFIG.Theme.Accent
ToggleIcon.BackgroundTransparency = 0.5
ToggleIcon.Image = "rbxassetid://10734949875"
ToggleIcon.ImageColor3 = CONFIG.Theme.Primary
ToggleIcon.ZIndex = 10
ToggleIcon.Parent = ScreenGui

local IconCorner = Instance.new("UICorner")
IconCorner.CornerRadius = UDim.new(0, 10)
IconCorner.Parent = ToggleIcon

local IconLabel = Instance.new("TextLabel")
IconLabel.Size = UDim2.new(1, 0, 1, 0)
IconLabel.BackgroundTransparency = 1
IconLabel.Text = "P"
IconLabel.TextColor3 = CONFIG.Theme.Text
IconLabel.TextSize = 20
IconLabel.Font = Enum.Font.GothamBold
IconLabel.Parent = ToggleIcon

-- Create Main GUI
local MainFrame = Instance.new("Frame")
MainFrame.Size = CONFIG.Sizes.MainFrame
MainFrame.Position = UDim2.new(0.5, -CONFIG.Sizes.MainFrame.X.Offset/2, 0.5, -CONFIG.Sizes.MainFrame.Y.Offset/2)
MainFrame.BackgroundColor3 = CONFIG.Theme.Background
MainFrame.BorderSizePixel = 0
MainFrame.Visible = false
MainFrame.ClipsDescendants = false
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, CONFIG.Theme.Primary),
    ColorSequenceKeypoint.new(1, CONFIG.Theme.Secondary)
}
UIGradient.Parent = MainFrame

-- Title
local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, 0, 0, 50)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Percsploit Multi Loader"
TitleLabel.TextColor3 = CONFIG.Theme.Text
TitleLabel.TextSize = 24
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextStrokeTransparency = 0.8
TitleLabel.TextStrokeColor3 = CONFIG.Theme.Primary
TitleLabel.Parent = MainFrame

-- Key Input
local KeyInput = Instance.new("TextBox")
KeyInput.Size = UDim2.new(0.9, 0, 0, 40)
KeyInput.Position = UDim2.new(0.05, 0, 0, 60)
KeyInput.BackgroundColor3 = CONFIG.Theme.Accent
KeyInput.Text = "Enter your key here"
KeyInput.TextColor3 = Color3.fromRGB(200, 200, 200)
KeyInput.TextSize = 16
KeyInput.Font = Enum.Font.Gotham
KeyInput.Parent = MainFrame
local KeyCorner = Instance.new("UICorner")
KeyCorner.CornerRadius = UDim.new(0, 5)
KeyCorner.Parent = KeyInput

-- Scrolling Frame for Scripts
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Size = UDim2.new(0.9, 0, 0, CONFIG.Sizes.MainFrame.Y.Offset - 110)
ScrollFrame.Position = UDim2.new(0.05, 0, 0, 110)
ScrollFrame.BackgroundTransparency = 1
ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, #CONFIG.Scripts * (CONFIG.Sizes.ButtonHeight + CONFIG.Sizes.ButtonSpacing))
ScrollFrame.ScrollBarThickness = 5
ScrollFrame.ScrollBarImageColor3 = CONFIG.Theme.Primary
ScrollFrame.Parent = MainFrame

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, CONFIG.Sizes.ButtonSpacing)
layout.Parent = ScrollFrame

-- Script Execution Function
local function executeScript(script, key)
    local success, result = pcall(function()
        local response = HttpService:GetAsync(script.url, true)
        if not response or response == "" then
            error("Failed to fetch script content")
        end
        -- Check if loadstring is available
        if not loadstring then
            error("loadstring is not supported in this environment")
        end
        local scriptCode = string.format("script_key='%s';%s", key, response)
        local func = loadstring(scriptCode)
        if not func then
            error("Failed to compile script")
        end
        return func()
    end)
    if not success then
        showNotification("Execution Error", "Failed to execute " .. script.name .. ": " .. tostring(result))
        if string.find(tostring(result), "vulnerable function") then
            showNotification("Debug Info", "Script may contain restricted functions (e.g., print). Contact script provider.", 10)
        end
        return false
    end
    showNotification("Success", script.name .. " executed successfully!", 3)
    return true
end

-- Create Script Buttons
local function createScriptButtons()
    local success, result = pcall(function()
        for _, script in ipairs(CONFIG.Scripts) do
            local ButtonFrame = Instance.new("Frame")
            ButtonFrame.Size = UDim2.new(1, 0, 0, CONFIG.Sizes.ButtonHeight)
            ButtonFrame.BackgroundTransparency = 1
            ButtonFrame.Parent = ScrollFrame

            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, 0, 0, 40)
            Button.BackgroundColor3 = CONFIG.Theme.Accent
            Button.Text = script.name
            Button.TextColor3 = CONFIG.Theme.Text
            Button.TextSize = 16
            Button.Font = Enum.Font.Gotham
            Button.Parent = ButtonFrame
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(0, 5)
            BtnCorner.Parent = Button
            local BtnGradient = Instance.new("UIGradient")
            BtnGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, CONFIG.Theme.Primary),
                ColorSequenceKeypoint.new(1, CONFIG.Theme.Secondary)
            }
            BtnGradient.Parent = Button

            local BtnScale = Instance.new("UIScale")
            BtnScale.Parent = Button
            local glowTween = TweenService:Create(BtnScale, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), {Scale = 1.05})
            glowTween:Play()

            local StatusFrame = Instance.new("Frame")
            StatusFrame.Size = UDim2.new(1, 0, 0, 10)
            StatusFrame.Position = UDim2.new(0, 0, 0, 40)
            StatusFrame.BackgroundTransparency = 1
            StatusFrame.Parent = ButtonFrame

            local StatusDot = Instance.new("Frame")
            StatusDot.Size = UDim2.new(0, 8, 0, 8)
            StatusDot.Position = UDim2.new(0, 5, 0, 1)
            StatusDot.BackgroundColor3 = CONFIG.Theme.Status
            StatusDot.Parent = StatusFrame
            local DotCorner = Instance.new("UICorner")
            DotCorner.CornerRadius = UDim.new(1, 0)
            DotCorner.Parent = StatusDot

            local StatusLabel = Instance.new("TextLabel")
            StatusLabel.Size = UDim2.new(0, 100, 0, 10)
            StatusLabel.Position = UDim2.new(0, 15, 0, 0)
            StatusLabel.BackgroundTransparency = 1
            StatusLabel.Text = "Undetected and Working"
            StatusLabel.TextColor3 = CONFIG.Theme.Status
            StatusLabel.TextSize = 12
            StatusLabel.Font = Enum.Font.Gotham
            StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
            StatusLabel.Parent = StatusFrame

            Button.MouseButton1Click:Connect(function()
                local key = KeyInput.Text
                if key == "" or key == "Enter your key here" then
                    showNotification("Error", "Please enter a valid key", 3)
                    return
                end
                executeScript(script, key)
            end)
        end
    end)
    if not success then
        showNotification("Error", "Failed to create script buttons: " .. tostring(result))
    end
end

-- Toggle Menu Functionality
local isMenuVisible = false
local function toggleMenu()
    isMenuVisible = not isMenuVisible
    MainFrame.Visible = isMenuVisible
    if isMenuVisible then
        local showTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = CONFIG.Sizes.MainFrame})
        showTween:Play()
        ToggleIcon.ImageColor3 = CONFIG.Theme.Secondary
        showNotification("Menu Toggled", "Menu opened", 2)
    else
        local hideTween = TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0)})
        hideTween:Play()
        ToggleIcon.ImageColor3 = CONFIG.Theme.Primary
        showNotification("Menu Toggled", "Menu closed", 2)
    end
end

-- Toggle Icon Click
ToggleIcon.MouseButton1Click:Connect(toggleMenu)

-- Key Input Handlers
KeyInput.Focused:Connect(function()
    if KeyInput.Text == "Enter your key here" then
        KeyInput.Text = ""
    end
end)

KeyInput.FocusLost:Connect(function()
    if KeyInput.Text == "" then
        KeyInput.Text = "Enter your key here"
    end
end)

-- Dragging Functionality for MainFrame
local dragging, dragInput, dragStart, startPos
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Dragging Functionality for ToggleIcon
local iconDragging, iconDragInput, iconDragStart, iconStartPos
ToggleIcon.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        iconDragging = true
        iconDragStart = input.Position
        iconStartPos = ToggleIcon.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                iconDragging = false
            end
        end)
    end
end)

ToggleIcon.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and iconDragging then
        local delta = input.Position - iconDragStart
        ToggleIcon.Position = UDim2.new(iconStartPos.X.Scale, iconStartPos.X.Offset + delta.X, iconStartPos.Y.Scale, iconStartPos.Y.Offset + delta.Y)
    end
end)

-- Initialize with Error Handling
local function initialize()
    local success, result = pcall(function()
        if not PlayerGui then
            error("PlayerGui not found, using CoreGui as fallback")
        end
        createScriptButtons()
        ToggleIcon.Visible = true
        showNotification("Initialized", "Percsploit Multi Loader initialized successfully! Click the top-right icon to toggle the menu.", 5)
        -- Check if loadstring is supported
        if not loadstring then
            showNotification("Warning", "This environment does not support script execution. Try a different executor.", 10)
        end
    end)
    if not success then
        showNotification("Initialization Error", "Failed to initialize: " .. tostring(result))
    end
end

-- Run Initialization
initialize()
